{"ast":null,"code":"var _jsxFileName = \"D:\\\\N\\u0103m 2 - ANTN\\\\Computational_Thinking\\\\ComputationalThinking\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [previewImage, setPreviewImage] = useState(null);\n  const [faces, setFaces] = useState([]);\n  const canvasRef = useRef(null);\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    if (file != null) {\n      setSelectedImage(file);\n      setPreviewImage(URL.createObjectURL(file));\n    }\n  };\n  const detectFaces = async () => {\n    if (!selectedImage) {\n      alert('Please select an image first!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('image', selectedImage);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/detect', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      setFaces(result.faces);\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Failed to detect faces. Please try again.');\n    }\n  };\n  useEffect(() => {\n    if (previewImage && faces.length > 0) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      const image = new Image();\n      image.onload = () => {\n        canvas.width = image.width;\n        canvas.height = image.height;\n        context.drawImage(image, 0, 0, image.width, image.height);\n        faces.forEach(face => {\n          const [x1, y1, x2, y2] = face.box;\n          context.strokeStyle = 'red';\n          context.lineWidth = 2;\n          context.strokeRect(x1, y1, x2 - x1, y2 - y1);\n        });\n      };\n      image.src = previewImage;\n    }\n  }, [previewImage, faces]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl text-yellow-200 font-bold underline\",\n      children: \"Hello world hehe!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-30\",\n      id: \"Detect\",\n      onClick: detectFaces,\n      children: \"Detect Faces\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), previewImage && /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'block',\n        maxWidth: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: faces.map((face, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/jpeg;base64,${face.cropped_image}`,\n          alt: `Face ${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: face.classifier\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Xg9eKnrDyxrE+AtZQlvq3QkxCGQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","selectedImage","setSelectedImage","previewImage","setPreviewImage","faces","setFaces","canvasRef","handleImageChange","event","file","target","files","URL","createObjectURL","detectFaces","alert","formData","FormData","append","response","fetch","method","body","ok","Error","result","json","error","console","length","canvas","current","context","getContext","image","Image","onload","width","height","drawImage","forEach","face","x1","y1","x2","y2","box","strokeStyle","lineWidth","strokeRect","src","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","id","onClick","ref","style","display","maxWidth","map","index","cropped_image","alt","classifier","_c","$RefreshReg$"],"sources":["D:/NÄƒm 2 - ANTN/Computational_Thinking/ComputationalThinking/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nfunction App() {\n    const [selectedImage, setSelectedImage] = useState(null);\n    const [previewImage, setPreviewImage] = useState(null);\n    const [faces, setFaces] = useState([]);\n    const canvasRef = useRef(null);\n\n    const handleImageChange = (event) => {\n        const file = event.target.files[0];\n        if (file != null) {\n            setSelectedImage(file);\n            setPreviewImage(URL.createObjectURL(file));\n        }\n    };\n\n    const detectFaces = async () => {\n        if (!selectedImage) {\n            alert('Please select an image first!');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('image', selectedImage);\n\n        try {\n            const response = await fetch('http://127.0.0.1:5000/detect', {\n                method: 'POST',\n                body: formData,\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const result = await response.json();\n            setFaces(result.faces);\n        } catch (error) {\n            console.error('Error:', error);\n            alert('Failed to detect faces. Please try again.');\n        }\n    };\n\n    useEffect(() => {\n        if (previewImage && faces.length > 0) {\n            const canvas = canvasRef.current;\n            const context = canvas.getContext('2d');\n            const image = new Image();\n\n            image.onload = () => {\n                canvas.width = image.width;\n                canvas.height = image.height;\n                context.drawImage(image, 0, 0, image.width, image.height);\n\n                faces.forEach((face) => {\n                    const [x1, y1, x2, y2] = face.box;\n                    context.strokeStyle = 'red';\n                    context.lineWidth = 2;\n                    context.strokeRect(x1, y1, x2 - x1, y2 - y1);\n                });\n            };\n\n            image.src = previewImage;\n        }\n    }, [previewImage, faces]);\n\n    return (\n        <div>\n             <h1 className=\"text-5xl text-yellow-200 font-bold underline\">\n                Hello world hehe!\n            </h1>\n            <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n            <button className='button-30' id='Detect' onClick={detectFaces}>Detect Faces</button>\n            {previewImage && <canvas ref={canvasRef} style={{ display: 'block', maxWidth: '100%' }} />}\n            <div>\n                {faces.map((face, index) => (\n                    <div key={index}>\n                        <img src={`data:image/jpeg;base64,${face.cropped_image}`} alt={`Face ${index}`} />\n                        <p>{face.classifier}</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}