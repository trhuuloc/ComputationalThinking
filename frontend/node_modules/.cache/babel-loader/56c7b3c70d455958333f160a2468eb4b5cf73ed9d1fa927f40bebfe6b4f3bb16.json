{"ast":null,"code":"var _jsxFileName = \"C:\\\\HocDaiHoc\\\\HK4\\\\ComputationalThinking\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [previewImage, setPreviewImage] = useState(null);\n  const [faces, setFaces] = useState([]);\n  const canvasRef = useRef(null);\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    if (file != null) {\n      setSelectedImage(file);\n      setPreviewImage(URL.createObjectURL(file));\n    }\n  };\n  const detectFaces = async () => {\n    const formData = new FormData();\n    formData.append('image', selectedImage);\n    const response = await fetch('http://127.0.0.1:5000/detect', {\n      method: 'POST',\n      body: formData\n    });\n    const result = await response.json();\n    setFaces(result.faces);\n  };\n  useEffect(() => {\n    if (previewImage && faces.length > 0) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      const image = new Image();\n      image.onload = () => {\n        canvas.width = image.width;\n        canvas.height = image.height;\n        context.drawImage(image, 0, 0, image.width, image.height);\n        faces.forEach(face => {\n          const [x1, y1, x2, y2] = face.box;\n          context.strokeStyle = 'red';\n          context.lineWidth = 2;\n          context.strokeRect(x1, y1, x2 - x1, y2 - y1);\n        });\n      };\n      image.src = previewImage;\n    }\n  }, [previewImage, faces]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-30\",\n      id: \"Detect\",\n      onClick: detectFaces,\n      children: \"Detect Faces\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), previewImage && /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'block',\n        maxWidth: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Xg9eKnrDyxrE+AtZQlvq3QkxCGQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","selectedImage","setSelectedImage","previewImage","setPreviewImage","faces","setFaces","canvasRef","handleImageChange","event","file","target","files","URL","createObjectURL","detectFaces","formData","FormData","append","response","fetch","method","body","result","json","length","canvas","current","context","getContext","image","Image","onload","width","height","drawImage","forEach","face","x1","y1","x2","y2","box","strokeStyle","lineWidth","strokeRect","src","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","id","onClick","ref","style","display","maxWidth","_c","$RefreshReg$"],"sources":["C:/HocDaiHoc/HK4/ComputationalThinking/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nfunction App() {\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [previewImage, setPreviewImage] = useState(null);\r\n    const [faces, setFaces] = useState([]);\r\n    const canvasRef = useRef(null);\r\n\r\n    const handleImageChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file != null) {\r\n            setSelectedImage(file);\r\n            setPreviewImage(URL.createObjectURL(file));\r\n        }\r\n    };\r\n\r\n    const detectFaces = async () => {\r\n        const formData = new FormData();\r\n        formData.append('image', selectedImage);\r\n\r\n        const response = await fetch('http://127.0.0.1:5000/detect', {\r\n            method: 'POST',\r\n            body: formData,\r\n        });\r\n\r\n        const result = await response.json();\r\n        setFaces(result.faces);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (previewImage && faces.length > 0) {\r\n            const canvas = canvasRef.current;\r\n            const context = canvas.getContext('2d');\r\n            const image = new Image();\r\n\r\n            image.onload = () => {\r\n                canvas.width = image.width;\r\n                canvas.height = image.height;\r\n                context.drawImage(image, 0, 0, image.width, image.height);\r\n\r\n                faces.forEach((face) => {\r\n                    const [x1, y1, x2, y2] = face.box;\r\n                    context.strokeStyle = 'red';\r\n                    context.lineWidth = 2;\r\n                    context.strokeRect(x1, y1, x2 - x1, y2 - y1);\r\n                });\r\n            };\r\n\r\n            image.src = previewImage;\r\n        }\r\n    }, [previewImage, faces]);\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n            <button className='button-30' id='Detect' onClick={detectFaces}>Detect Faces</button>\r\n            {previewImage && <canvas ref={canvasRef} style={{ display: 'block', maxWidth: '100%' }} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}